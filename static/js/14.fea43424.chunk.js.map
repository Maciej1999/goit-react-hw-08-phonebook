{"version":3,"file":"static/js/14.fea43424.chunk.js","mappings":"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","sources":["components/Phonebook/ContactForm/ContactForm.jsx","redux/contacts/selectors.js","components/Phonebook/ContactList/ContactList.jsx","components/Phonebook/Title/Title.jsx","components/Phonebook/Phonebook.jsx","pages/PhonebookPage.js","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/Phonebook.module.css?3a02"],"sourcesContent":["import React from 'react';\nimport css from './../Phonebook.module.css';\nimport PropTypes from 'prop-types';\nexport const ContactForm = ({\n  name,\n  number,\n  addContactHandle,\n  setName,\n  setNumber,\n}) => {\n  return (\n    <div className={css.card}>\n      <form\n        className={css.form}\n        onSubmit={e =>\n          addContactHandle(e, {\n            name: name,\n            number: number,\n          })\n        }\n      >\n        <label className={css.label} htmlFor=\"name\">\n          Name\n        </label>\n        <input\n          className={css.input}\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <label className={css.label} htmlFor=\"number\">\n          Number\n        </label>\n        <input\n          className={css.input}\n          type=\"tel\"\n          id=\"number\"\n          name=\"number\"\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button className={`${css.add} ${css.button}`} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  addContactHandle: PropTypes.func.isRequired,\n  setName: PropTypes.func.isRequired,\n  setNumber: PropTypes.func.isRequired,\n};\n","export const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectLoading = state => state.contacts.isLoading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport css from './../Phonebook.module.css';\n\nexport const ContactList = ({ contacts, deleteContactHandle }) => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const filterContacts = (filter, contacts) => {\n    return contacts.filter(\n      el =>\n        el.name.toLowerCase().includes(filter.toLowerCase()) ||\n        el.number\n          .toLowerCase()\n          .trim()\n          .replace(/ |-/g, '')\n          .includes(filter.toLowerCase().trim().replace(/ |-/g, ''))\n    );\n  };\n  const Entry = ({ name, number, id }) => {\n    return (\n      <li className={css.entry} id={id}>\n        <span className={css.entryText}>\n          <span className={css.name}>{name + ' '}</span>\n          <span className={css.number}>{` ${number}`}</span>\n        </span>\n        <button\n          key={`${name}${number}btn${id}`}\n          className={`${css.button} ${css.delete}`}\n          type=\"button\"\n          onClick={e => deleteContactHandle(e, { name, number, id })}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  };\n\n  return (\n    <div className={css.contacts}>\n      <label className={css.label} htmlFor=\"filter\">\n        Find contacts\n      </label>\n      <input\n        className={css.input}\n        type=\"text\"\n        id=\"filter\"\n        name=\"filter\"\n        onChange={e => dispatch(setFilter(e.target.value.trim()))}\n        value={filter}\n        title=\"Will show only contacts that match search quota written here.\"\n      />\n      {filter ? (\n        <button\n          className={`${css.button} ${css.delete}`}\n          type=\"button\"\n          onClick={e => dispatch(setFilter(''))}\n        >\n          Clear Filter\n        </button>\n      ) : (\n        ''\n      )}\n      {useSelector(selectLoading) ? (\n        <>\n          <br />\n          Loading changes...\n        </>\n      ) : (\n        ''\n      )}\n      {contacts.length < 1 ? (\n        <span className={css.label}>No contacts found.</span>\n      ) : (\n        <ul className={css.list}>\n          {filterContacts(filter, contacts).map(el => {\n            return (\n              <Entry\n                name={el.name}\n                number={el.number}\n                id={`${el.id}`}\n                key={`entry${el.id}`}\n              />\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  deleteContactHandle: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './../Phonebook.module.css';\nexport const Title = ({ title }) => <h2 className={css.title}>{title}</h2>;\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactList } from './ContactList/ContactList';\nimport { Title } from './Title/Title';\nimport {\n  addContact,\n  deleteContactById,\n  fetchContacts,\n} from 'redux/contacts/operations';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport css from './Phonebook.module.css';\nexport const Phonebook = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const addContactHandle = (e, newContact) => {\n    e.preventDefault();\n    const filtered =\n      contacts.find(\n        c => c.name.toLowerCase() === newContact.name.toLowerCase()\n      ) || 0;\n    if (filtered !== 0) {\n      dispatch(setFilter(filtered.name));\n      alert(`You aready have ${filtered.name} in your phonebook.\n\n      ${filtered.name} ${filtered.number}`);\n      return;\n    }\n    const filteredNum =\n      contacts.find(\n        c => c.number.toLowerCase() === newContact.number.toLowerCase()\n      ) || 0;\n    if (filteredNum !== 0) {\n      dispatch(setFilter(filteredNum.number));\n      alert(`You aready have this number in your phonebook.\n      \n      ${filteredNum.name} ${filteredNum.number}`);\n      setNumber(filteredNum.number);\n      return;\n    }\n    dispatch(addContact(newContact));\n    setName('');\n    setNumber('');\n    setFilter('');\n  };\n  const deleteContactHandle = (e, contact) => {\n    e.preventDefault();\n    dispatch(deleteContactById(contact.id));\n  };\n  return (\n    <div className={`${css.pphonebook}`}>\n      <Title title=\"Phonebook\" />\n\n      <ContactForm\n        name={name}\n        number={number}\n        addContactHandle={addContactHandle}\n        setName={setName}\n        setNumber={setNumber}\n      />\n\n      <Title title=\"Contacts\" />\n      <ContactList\n        contacts={contacts || []}\n        deleteContactHandle={deleteContactHandle}\n      />\n    </div>\n  );\n};\n","import { Phonebook } from 'components/Phonebook/Phonebook';\nexport const PhonebookPage = () => {\n  return (\n    <main\n      style={{ width: '100%', boxSizing: 'border-box', padding: '0.4em 0px' }}\n    >\n      <Phonebook />\n    </main>\n  );\n};\n\nexport default PhonebookPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Phonebook_phonebook__A8MMG\",\"form\":\"Phonebook_form__J23fu\",\"card\":\"Phonebook_card__FbnZ4\",\"label\":\"Phonebook_label__Qzztg\",\"button\":\"Phonebook_button__QiRKB\",\"input\":\"Phonebook_input__8yiEQ\",\"contacts\":\"Phonebook_contacts__FMhKp\",\"list\":\"Phonebook_list__S1mT+\",\"entry\":\"Phonebook_entry__lNYi-\",\"entryText\":\"Phonebook_entryText__HDgVd\",\"name\":\"Phonebook_name__Bp6wv\",\"number\":\"Phonebook_number__OW5CF\",\"title\":\"Phonebook_title__ipARL\",\"delete\":\"Phonebook_delete__gYi8o\",\"login\":\"Phonebook_login__RlUqv\",\"error\":\"Phonebook_error__Kiude\"};"],"names":["ContactForm","name","number","addContactHandle","setName","setNumber","className","css","onSubmit","e","htmlFor","type","id","value","onChange","target","title","required","selectFilter","state","filter","selectContacts","contacts","selectLoading","isLoading","ContactList","deleteContactHandle","useSelector","dispatch","useDispatch","Entry","onClick","setFilter","trim","length","el","toLowerCase","includes","replace","filterContacts","map","Title","Phonebook","useState","useEffect","fetchContacts","newContact","preventDefault","filtered","find","c","alert","filteredNum","addContact","contact","deleteContactById","PhonebookPage","style","width","boxSizing","padding"],"sourceRoot":""}